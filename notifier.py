import telebot
import accounts_container
import config
from telebot.types import Message

from parser import PayloniumParser


bot = telebot.TeleBot(config.TELEGRAM_BOT_TOKEN)


def send_notification(user_id: int, order_data: dict):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    message = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n\n"
        f"<b>–ö–∞–±–∏–Ω–µ—Ç:</b> {order_data['account_name']}\n"
        f"<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</b> {order_data['datetime']}\n"
        f"<b>–ë–∞–Ω–∫:</b> {order_data['bank']}\n"
        f"<b>–°—É–º–º–∞:</b> {order_data['amount']:,} RUB".replace(",", " ")
    )
    try:
        bot.send_message(chat_id=user_id, text=message, parse_mode="HTML")
        print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


@bot.message_handler(commands=["start"])
def send_welcome(message: Message):
    valid_sessions = {
        acc._login: acc.check_session()
        for acc in accounts_container.accounts
        if acc.telegram_id == message.chat.id
    }
    res_message = f"–ë–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ PayLonium –∞–∫—Ç–∏–≤–µ–Ω. –í–∞—à ID: {message.chat.id}\n"
    for item in valid_sessions.items():
        acc_name, valid = item
        res_message += f"{acc_name}: {"üü¢" if valid else "üî¥"}\n"
    bot.reply_to(message, res_message)


def start_bot_polling():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç polling –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª."""
    import threading

    t = threading.Thread(target=bot.polling, kwargs={"none_stop": True})
    t.daemon = True
    t.start()
    print("Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.")
